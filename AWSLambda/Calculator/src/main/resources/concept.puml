@startuml
class Value {
- component_1 : BigDecimal
- component_2 : BigDecimal
- isComplex : boolean
+ getComponent_1() : BigDecimal
+ getComponent_2() : BigDecimal
+ isComplex() : boolean
}
class Equation {
- expression : Expression
- result : Value
- void evaluate()
}
class CalculatorApp {
+ calculate(Expression) : Equation
}
class Expression {
- operator : Operator
- operand_1 : Value
- operand_2 : Value
}
class CalculatorHandler {
+ handleRequest(Expression,Context) : Equation
}
class "RequestHandler<I,O>" {
+ handleRequest(I,Context) : O
}
enum Operator {
ADD
SUBTRACT
MULTIPLY
DIVIDE
+ {static} evaluate() : Value
}

"RequestHandler<I,O>" <|.. CalculatorHandler
CalculatorHandler *-- CalculatorApp

Expression *- Value
Expression *-- Operator

Equation *-- Expression
Equation *- Value
@enduml